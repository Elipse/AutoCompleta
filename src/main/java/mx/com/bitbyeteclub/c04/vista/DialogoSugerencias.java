/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.com.bitbyeteclub.c04.vista;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.table.AbstractTableModel;
import mx.com.bitbyeteclub.c01.Sugerencia;
import mx.com.bitbyeteclub.c03.adaptadores.AutoCompletaModeloVista;

/**
 *
 * @author ELIALVA
 */
public class DialogoSugerencias extends JDialog {

    private static final DialogoSugerencias DIALOGO_SUGERENCIAS = new DialogoSugerencias(null, false);
    
    private MyModel tableModel;
    private final int NUM_REGISTROS_A_MOSTRAR = 4;
    private int SCROLL_ALTURA;
    private final int SCROLL_ALTURA_AJUSTE = 3;
    private int DIALOGO_BASE = 200;
    private final int DIALOGO_BASE_AJUSTE = 45;
    private int TABLA_ALTURA;

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param modal
     */
    private DialogoSugerencias(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setFocusable(false);
        isActive();
        getOwner().dispose();
        setUndecorated(true);
        setLocation(100, 100);
        pack();
        jTable1.setShowGrid(false);
    }

    public static DialogoSugerencias getInstance() {        
        return DIALOGO_SUGERENCIAS;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setFocusCycleRoot(false);
        setFocusableWindowState(false);
        setType(java.awt.Window.Type.POPUP);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 200));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.setFocusable(false);
        jTable1.setPreferredSize(new java.awt.Dimension(150, 198));
        jTable1.setRowHeight(24);
        jTable1.setTableHeader(null);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoSugerencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoSugerencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoSugerencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoSugerencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DialogoSugerencias dialog = new DialogoSugerencias(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void sugiere(AutoCompletaModeloVista modeloVista) {
        tableModel = new MyModel(modeloVista.getSugerencias());
        jTable1.setModel(tableModel);
        ajustaBase();
        ajustaAltura();
        ajustaDimensiones();
        pack();
        setVisible(true);
    }

    private void ajustaBase() {
        List<Sugerencia> sugerencias = tableModel.sugerencias;

        String textoMasLargo = "";
        int maximaLongitud = 0;

        for (Sugerencia sugerencia : sugerencias) {
            String texto = sugerencia.getTexto();
            int textoLongitud = texto.length();
            if (textoLongitud > maximaLongitud) {
                maximaLongitud = textoLongitud;
                textoMasLargo = texto;
            }
        }

        Font font = getFont();
        AffineTransform affinetransform = new AffineTransform();
        FontRenderContext frc = new FontRenderContext(affinetransform, true, true);

        double ancho = font.getStringBounds(textoMasLargo, frc).getWidth();
        DIALOGO_BASE = (int) Math.ceil(ancho) + DIALOGO_BASE_AJUSTE;
    }

    private void ajustaAltura() {
        int alturaDelRegistro = jTable1.getRowHeight();
        int numRegistros = tableModel.getRowCount();
        int numRegistrosAMostrar = Math.min(numRegistros, NUM_REGISTROS_A_MOSTRAR);
        TABLA_ALTURA = numRegistros * alturaDelRegistro;
        SCROLL_ALTURA = (numRegistrosAMostrar * alturaDelRegistro) + SCROLL_ALTURA_AJUSTE;
    }

    private void ajustaDimensiones() {
        Dimension tablaDimensiones = new Dimension(DIALOGO_BASE, TABLA_ALTURA);
        jTable1.setPreferredSize(tablaDimensiones);
        Dimension scrollDimensiones = new Dimension(DIALOGO_BASE, SCROLL_ALTURA);
        jScrollPane1.setPreferredSize(scrollDimensiones);
    }

    public void muestra() {
        setVisible(false);
    }

    public void oculta() {
        setVisible(false);
    }

    public void sube() {
        int selectedRow = jTable1.getSelectedRow();
        selectedRow--;
        if (selectedRow < 0) {
            selectedRow = 0;
        }
        seleccionaRegistro(selectedRow);
    }

    public void baja() {
        int selectedRow = jTable1.getSelectedRow();
        selectedRow++;
        if (selectedRow >= jTable1.getRowCount()) {
            selectedRow = jTable1.getRowCount() - 1;
        }
        seleccionaRegistro(selectedRow);
    }

    private void seleccionaRegistro(int selectedRow) {
        jTable1.getSelectionModel().setSelectionInterval(selectedRow, selectedRow);
        jTable1.scrollRectToVisible(new Rectangle(jTable1.getCellRect(selectedRow, 0, true)));
    }

    public Sugerencia selecciona() {
        int selectedRow = jTable1.getSelectedRow();

        Sugerencia valueAt = (Sugerencia) jTable1.getModel().getValueAt(selectedRow, 0);
        return valueAt;
    }

    public void posiciona(int x, int y) {
        setLocation(x, y);
    }

    boolean esVisible() {
        return isVisible();
    }

    private static class MyModel extends AbstractTableModel {

        private final List<Sugerencia> sugerencias;

        private MyModel(List<Sugerencia> sugerencias) {
            this.sugerencias = sugerencias;
        }

        @Override
        public int getRowCount() {
            return sugerencias.size();
        }

        @Override
        public int getColumnCount() {
            return 1;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            return sugerencias.get(rowIndex);
        }
    }
}
